[{"/Users/matthewkostka/Documents/mountaineer-final/src/index.js":"1","/Users/matthewkostka/Documents/mountaineer-final/src/App.js":"2","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Main/Main.jsx":"3","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Main/Header/Header.jsx":"4","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Main/Options/Options.jsx":"5","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Conquered/Conquered.jsx":"6","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/Planned.jsx":"7","/Users/matthewkostka/Documents/mountaineer-final/src/context/context.js":"8","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Layer/Layer.jsx":"9","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlannedContent.jsx":"10","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlanForm/PlanForm.jsx":"11","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlanList/PlanList.jsx":"12","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlanForm/Form/Form.jsx":"13","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlanForm/PlanInfo/PlanInfo.jsx":"14","/Users/matthewkostka/Documents/mountaineer-final/src/context/contextReducer.js":"15","/Users/matthewkostka/Documents/mountaineer-final/src/constants/constants.js":"16"},{"size":569,"mtime":1609356134309,"results":"17","hashOfConfig":"18"},{"size":885,"mtime":1609190106079,"results":"19","hashOfConfig":"18"},{"size":292,"mtime":1609161952013,"results":"20","hashOfConfig":"18"},{"size":599,"mtime":1609097053101,"results":"21","hashOfConfig":"18"},{"size":2570,"mtime":1609176904770,"results":"22","hashOfConfig":"18"},{"size":236,"mtime":1609107354001,"results":"23","hashOfConfig":"18"},{"size":312,"mtime":1609177646648,"results":"24","hashOfConfig":"18"},{"size":3139,"mtime":1609363647995,"results":"25","hashOfConfig":"18"},{"size":439,"mtime":1609164109738,"results":"26","hashOfConfig":"18"},{"size":342,"mtime":1609179325204,"results":"27","hashOfConfig":"18"},{"size":922,"mtime":1609277133385,"results":"28","hashOfConfig":"18"},{"size":2778,"mtime":1609364616658,"results":"29","hashOfConfig":"18"},{"size":3560,"mtime":1609370940322,"results":"30","hashOfConfig":"18"},{"size":975,"mtime":1609377496642,"results":"31","hashOfConfig":"18"},{"size":536,"mtime":1609363493749,"results":"32","hashOfConfig":"18"},{"size":18775,"mtime":1609375490602,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1ova067",{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthewkostka/Documents/mountaineer-final/src/index.js",["73","74"],"import React, { useContext, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { PlanStatusProvider,  ConqStatusProvider, FormStatusProvider, PlannedTripsProvider } from './context/context';\n\n\nReactDOM.render(\n    <FormStatusProvider>\n        <PlannedTripsProvider>\n            <PlanStatusProvider>\n                <ConqStatusProvider>\n                    <App/>\n                </ConqStatusProvider>\n            </PlanStatusProvider>\n        </PlannedTripsProvider>\n    </FormStatusProvider>\n, document.getElementById('root'));\n",["75","76"],"/Users/matthewkostka/Documents/mountaineer-final/src/App.js",["77","78","79","80","81"],"import React, { useContext, useState } from 'react';\nimport './app.scss';\nimport './reset.css';\nimport Main from './Components/Main/Main';\nimport Conquered from './Components/Conquered/Conquered';\nimport Planned from './Components/Planned/Planned';\nimport { PlanStatusProvider, PlanStatusContext, ConqStatusProvider, ConqStatusContext } from './context/context';\nimport Layer from './Components/Layer/Layer';\n\n\nconst App = () => {\n\n    \n    const [conqStatus, setConqStatus] = useContext(ConqStatusContext);\n    \n    const [planStatus, setPlanStatus] = useContext(PlanStatusContext);\n\n\n    return (\n        <div className=\"app\">\n                <Main />\n                <Planned isPlanActive={planStatus} />\n                <Conquered isConqActive={conqStatus} />\n                <Layer isConqActive={conqStatus} isPlanActive={planStatus}/>\n        </div>\n    )\n}\n\nexport default App;\n","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Main/Main.jsx",[],"/Users/matthewkostka/Documents/mountaineer-final/src/Components/Main/Header/Header.jsx",[],"/Users/matthewkostka/Documents/mountaineer-final/src/Components/Main/Options/Options.jsx",["82","83"],"import React, { useState, useContext, useEffect } from 'react';\nimport './optionsStyles.scss';\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport { PlanStatusProvider, PlanStatusContext, ConqStatusProvider, ConqStatusContext } from '../../../context/context';\n\nconst Options = () => {\n    const [show, handleShow] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener('scroll', () => {\n            if (window.scrollY > 150) {\n                handleShow(true);\n            } else {\n                handleShow(false);\n            }\n        });\n        return () => {\n            window.removeEventListener('scroll');\n        }\n    }, []);\n\n    const [conqStatus, setConqStatus] = useContext(ConqStatusContext);\n    const [planStatus, setPlanStatus] = useContext(PlanStatusContext);\n\n    const handleConqClick = () => {\n\n        setConqStatus(true);\n        setPlanStatus(false);\n\n        setTimeout( () => window.scrollTo(785, 785), 300 );\n    }\n    \n    const handlePlanClick = () => {\n\n        setPlanStatus(true);\n        setConqStatus(false);\n\n        setTimeout( () => window.scrollTo(785, 785), 300 );\n        \n    }\n\n    return (\n        <div className={`options__menu ${show && \"options__menu__scrolled\"}`}>\n            <div className=\"option__menu__container\">\n                <div className={conqStatus ? 'option__menu__active' : \"option__menu__option\"} onClick={handleConqClick}>\n                    <div className=\"menu__option__content\">\n                        <div className=\"option__content__title\">\n                            <h3>CONQUERED</h3>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"option__content__icon\">\n                            <CloudDoneIcon />\n                        </div>\n                    </div>\n                </div>\n                <div className={planStatus ? 'option__menu__active' : \"option__menu__option\"} onClick={handlePlanClick}>\n                    <div className=\"menu__option__content\">\n                        <div className=\"option__content__title\">\n                            <h3>PLANNED</h3>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"option__content__icon\">\n                            <LibraryAddIcon />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Options;\n","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Conquered/Conquered.jsx",[],"/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/Planned.jsx",[],"/Users/matthewkostka/Documents/mountaineer-final/src/context/context.js",[],"/Users/matthewkostka/Documents/mountaineer-final/src/Components/Layer/Layer.jsx",[],"/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlannedContent.jsx",[],"/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlanForm/PlanForm.jsx",[],"/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlanList/PlanList.jsx",["84","85","86","87","88","89"],"import React, { useState, useContext } from 'react';\nimport { List as MUIList, ListItem, ListItemAvatar, Divider ,ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide, MuiThemeProvider } from '@material-ui/core';\nimport './planListStyles.scss';\nimport { PlannedTripsContext, TripActionsContext } from \"../../../../context/context\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\n\nconst PlanList = () => {\n    const { deleteTrip, plannedTrips, completeTrip, completedTrip } = useContext(PlannedTripsContext);\n\n    /*const { deleteTrip, plannedTrips } = useContext(TripActionsContext);*/\n\n    return (\n        <div className=\"planList\">\n            <div className=\"planList__title\">\n                <h2>PLANNED ADVENTURES</h2>\n            </div>\n            <div className=\"list__items\">\n                <MUIList dense={false} style={{maxHeight: '40vh', overflow: 'auto',}}>\n                {plannedTrips.map((trip) => (\n                    <Slide direction=\"down\" in mountOnEnter unmountOnExit key={trip.id}>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar>\n                                    \n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={trip.mountain + ' -- ' + trip.continent} secondary={`Start Date : ${trip.startDate} - End Date : ${trip.endDate}`}/>\n                            <ListItemSecondaryAction style={{paddingRight: '240px'}}>\n                                <IconButton edge=\"end\" aria-label=\"finished\">\n                                    <DoneAllIcon style={{color: 'green'}}/>\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                            <ListItemSecondaryAction style={{ paddingRight: '140px'}}>\n                                <IconButton edge=\"end\" aria-label=\"pause\" >\n                                    <PauseIcon style={{color: 'yellow'}} />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                            <ListItemSecondaryAction style={{ paddingRight: '40px'}}>\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTrip(trip.id)}>\n                                    <DeleteIcon  style={{color: 'red'}}/>\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    </Slide>\n                ))}\n                </MUIList>\n            </div>\n        </div>\n    )\n}\n\nexport default PlanList;\n","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlanForm/Form/Form.jsx",["90","91","92","93","94","95","96"],"import React, { useState, useContext } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem, NativeSelect } from '@material-ui/core';\nimport './formStyles.scss';\nimport {FormStatusContext, FormStatusProvider, PlannedTripsContext} from '../../../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport constants from '../../../../../constants/constants';\n\n\n\nconst Form = () => {\n\n    const [formData, setFormData] = useContext(FormStatusContext);\n    const { addTrip, plannedTrips } = useContext(PlannedTripsContext);\n\n    const handleFormClick = (e) => {\n        if (formData.continent === '' || formData.mountain === '' || formData.startDate === '' || formData.endDate === '') {\n            setFormData({id : '', continent: '', mountain: '', startDate: '', endDate: ''});\n        } else {\n            e.preventDefault();\n            const pTrip = {...formData, id : uuidv4(), continent : formData.continent, mountain : formData.mountain, startDate : formData.startDate, endDate: formData.endDate}\n            addTrip(pTrip);\n        }\n        setFormData({id : '', continent: '', mountain: '', startDate: '', endDate: ''});\n    }\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={6} >\n                <FormControl fullWidth>\n                    <InputLabel>CONTINENT</InputLabel>\n                    <NativeSelect\n                        value={formData.continent}\n                        onChange={(e) => {\n                            setFormData({ ...formData, continent : e.target.value })\n                        }}\n                    >\n                        <option value={null}></option>\n                        {constants.map((cont) => <option value={cont.continent}>{cont.continent}</option>)}\n                    </NativeSelect>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>MOUNTAIN</InputLabel>\n                    <NativeSelect\n                        value={formData.mountain}\n                        onChange={(e) => setFormData({ ...formData, mountain : e.target.value })}\n                    >\n                        <option value={null}></option>\n                        \n                        {constants.map((cont) => {\n                            if (formData.continent === cont.continent){\n                                return (cont.mountains.map((m) => <option value={m.name}>{m.name}</option>))\n                            }\n                        })}\n                    </NativeSelect>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <TextField value={formData.startDate} variant=\"outlined\" label=\"Start Date\" type=\"date\" \n                    InputLabelProps={{shrink: true}} onChange={(e) => setFormData({ ...formData, startDate : e.target.value })}></TextField>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <TextField value={formData.endDate}  variant=\"outlined\" label=\"End Date\" type=\"date\" \n                    InputLabelProps={{shrink: true}} onChange={(e) => setFormData({ ...formData, endDate : e.target.value })}></TextField>\n                </FormControl>\n            </Grid>\n            <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={handleFormClick}>Create</Button>\n        </Grid>\n    )\n}\n\nexport default Form;\n","/Users/matthewkostka/Documents/mountaineer-final/src/Components/Planned/PlannedContent/PlanForm/PlanInfo/PlanInfo.jsx",["97","98","99","100"],"/Users/matthewkostka/Documents/mountaineer-final/src/context/contextReducer.js",["101","102"],"const contextReducer = (state, action) => {\n\n    let plannedTrips;\n    let completedTrip;\n\n    switch (action.type) {\n        case 'DELETE_TRIP' : \n            plannedTrips = state.filter((t) => t.id !== action.payload );\n\n            return plannedTrips;\n        case 'ADD_TRIP' : \n            plannedTrips = [action.payload, ...state];\n\n            return plannedTrips;\n        case 'COMPLETE_TRIP' :\n            completedTrip = [action.payload];\n        default : \n            return state;\n\n    }\n\n} \n\nexport default contextReducer;","/Users/matthewkostka/Documents/mountaineer-final/src/constants/constants.js",[],{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"103","severity":1,"message":"107","line":1,"column":29,"nodeType":"105","messageId":"106","endLine":1,"endColumn":37},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"103","severity":1,"message":"107","line":1,"column":29,"nodeType":"105","messageId":"106","endLine":1,"endColumn":37},{"ruleId":"103","severity":1,"message":"112","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":28},{"ruleId":"103","severity":1,"message":"113","line":7,"column":49,"nodeType":"105","messageId":"106","endLine":7,"endColumn":67},{"ruleId":"103","severity":1,"message":"114","line":14,"column":24,"nodeType":"105","messageId":"106","endLine":14,"endColumn":37},{"ruleId":"103","severity":1,"message":"115","line":16,"column":24,"nodeType":"105","messageId":"106","endLine":16,"endColumn":37},{"ruleId":"103","severity":1,"message":"112","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":28},{"ruleId":"103","severity":1,"message":"113","line":5,"column":49,"nodeType":"105","messageId":"106","endLine":5,"endColumn":67},{"ruleId":"103","severity":1,"message":"107","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"116","line":2,"column":53,"nodeType":"105","messageId":"106","endLine":2,"endColumn":60},{"ruleId":"103","severity":1,"message":"117","line":2,"column":128,"nodeType":"105","messageId":"106","endLine":2,"endColumn":144},{"ruleId":"103","severity":1,"message":"118","line":4,"column":31,"nodeType":"105","messageId":"106","endLine":4,"endColumn":49},{"ruleId":"103","severity":1,"message":"119","line":11,"column":39,"nodeType":"105","messageId":"106","endLine":11,"endColumn":51},{"ruleId":"103","severity":1,"message":"120","line":11,"column":53,"nodeType":"105","messageId":"106","endLine":11,"endColumn":66},{"ruleId":"103","severity":1,"message":"107","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"121","line":2,"column":21,"nodeType":"105","messageId":"106","endLine":2,"endColumn":31},{"ruleId":"103","severity":1,"message":"122","line":2,"column":72,"nodeType":"105","messageId":"106","endLine":2,"endColumn":78},{"ruleId":"103","severity":1,"message":"123","line":2,"column":80,"nodeType":"105","messageId":"106","endLine":2,"endColumn":88},{"ruleId":"103","severity":1,"message":"124","line":4,"column":28,"nodeType":"105","messageId":"106","endLine":4,"endColumn":46},{"ruleId":"103","severity":1,"message":"125","line":13,"column":22,"nodeType":"105","messageId":"106","endLine":13,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":51,"column":47,"nodeType":"128","messageId":"129","endLine":51,"endColumn":49},{"ruleId":"103","severity":1,"message":"107","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":24},{"ruleId":"103","severity":1,"message":"124","line":2,"column":28,"nodeType":"105","messageId":"106","endLine":2,"endColumn":46},{"ruleId":"103","severity":1,"message":"130","line":7,"column":12,"nodeType":"105","messageId":"106","endLine":7,"endColumn":20},{"ruleId":"103","severity":1,"message":"131","line":7,"column":22,"nodeType":"105","messageId":"106","endLine":7,"endColumn":33},{"ruleId":"103","severity":1,"message":"120","line":16,"column":13,"nodeType":"105","messageId":"106","endLine":16,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":17,"column":9,"nodeType":"134","messageId":"135","endLine":18,"endColumn":26},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'PlanStatusProvider' is defined but never used.","'ConqStatusProvider' is defined but never used.","'setConqStatus' is assigned a value but never used.","'setPlanStatus' is assigned a value but never used.","'Divider' is defined but never used.","'MuiThemeProvider' is defined but never used.","'TripActionsContext' is defined but never used.","'completeTrip' is assigned a value but never used.","'completedTrip' is assigned a value but never used.","'Typography' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormStatusProvider' is defined but never used.","'plannedTrips' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]